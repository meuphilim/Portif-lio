name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Atualizar automaticamente a cada 12 horas
    - cron: '0 */12 * * *'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Configure Git
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'

    - name: Install dependencies
      run: npm ci

    - name: Setup Pages
      uses: actions/configure-pages@v4
      with:
        static_site_generator: next

    - name: Generate portfolio data
      env:
        GITHUB_USERNAME: ${{ secrets.GITHUB_USERNAME || github.repository_owner }}
        NEXT_PUBLIC_GITHUB_USERNAME: ${{ secrets.GITHUB_USERNAME || github.repository_owner }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "🔧 Configurando variáveis de ambiente..."
        echo "GITHUB_USERNAME=${GITHUB_USERNAME}" >> $GITHUB_ENV
        echo "NEXT_PUBLIC_GITHUB_USERNAME=${GITHUB_USERNAME}" >> $GITHUB_ENV
        echo "📊 Gerando dados do portfólio..."
        node update_catalog.js

    - name: Build with Next.js
      env:
        GITHUB_USERNAME: ${{ secrets.GITHUB_USERNAME || github.repository_owner }}
        NEXT_PUBLIC_GITHUB_USERNAME: ${{ secrets.GITHUB_USERNAME || github.repository_owner }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "🔨 Iniciando build do Next.js..."
        npm run build

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  test:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: github-pages
        path: ./test-site

    - name: Test static site
      run: |
        echo "🧪 Testando site estático..."
        if [ -f "./test-site/index.html" ]; then
          echo "✅ index.html encontrado"
          echo "📄 Tamanho do arquivo: $(du -h ./test-site/index.html | cut -f1)"
        else
          echo "❌ index.html não encontrado"
          exit 1
        fi
        
        echo "📂 Arquivos gerados:"
        find ./test-site -type f -name "*.html" | head -10
