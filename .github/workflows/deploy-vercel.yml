name: 🚀 Deploy to Vercel

on:
  push:
    branches: [main]
    paths-ignore:
      - 'build/**'
      - 'docs/**'
      - '*.md'
      - '.github/workflows/ci.yml'
  workflow_dispatch:

concurrency:
  group: vercel-deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    name: 🚀 Deploy to Vercel Production
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: |
          echo "📦 Installing dependencies..."
          npm ci --prefer-offline --no-audit
          echo "✅ Dependencies installed"

      - name: 🔧 Validate environment variables
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          echo "🔧 Validating environment variables..."
          
          if [ -z "$VERCEL_TOKEN" ]; then
            echo "❌ VERCEL_TOKEN is not set"
            exit 1
          fi
          
          if [ -z "$VERCEL_ORG_ID" ]; then
            echo "❌ VERCEL_ORG_ID is not set"
            exit 1
          fi
          
          if [ -z "$VERCEL_PROJECT_ID" ]; then
            echo "❌ VERCEL_PROJECT_ID is not set"
            exit 1
          fi
          
          echo "✅ All required environment variables are set"

      - name: 🏗️ Build application
        env:
          GITHUB_USERNAME: ${{ vars.GITHUB_USERNAME || 'meuphilim' }}
          NEXT_PUBLIC_GITHUB_USERNAME: ${{ vars.GITHUB_USERNAME || 'meuphilim' }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "🏗️ Building Next.js application..."
          npm run build
          echo "✅ Build completed successfully"

      - name: 📊 Build analysis
        run: |
          echo "📊 Build Analysis"
          echo "================"
          if [ -d "out" ]; then
            echo "📁 Output directory size: $(du -sh out/ | cut -f1)"
            echo "📄 Total files: $(find out -type f | wc -l)"
            echo "🗜️ Largest files:"
            find out -type f -exec ls -lh {} + | sort -k5 -hr | head -5
          else
            echo "❌ Output directory not found"
            exit 1
          fi

      - name: 🚀 Deploy to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          echo "🚀 Deploying to Vercel..."
          
          # Install Vercel CLI
          npm install -g vercel@latest
          
          # Deploy to production
          vercel deploy --prod --token="$VERCEL_TOKEN" --yes
          
          echo "✅ Deployment completed successfully"

      - name: 📊 Deployment summary
        if: always()
        run: |
          echo "📊 Deployment Summary"
          echo "===================="
          echo "✅ Vercel deployment completed"
          echo "📅 Timestamp: $(date)"
          echo "🔗 Commit: ${{ github.sha }}"
          echo "🌿 Branch: ${{ github.ref }}"
          echo "🌐 Production URL: Check Vercel dashboard"
