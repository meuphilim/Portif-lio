name: 🚀 Deploy para Vercel

on:
  push:
    branches: [main]
    paths-ignore:
      - 'build/**'
      - 'docs/**'
      - '*.md'
      - '.github/workflows/ci.yml'
  workflow_dispatch:

concurrency:
  group: vercel-deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    name: 🚀 Deploy para Produção Vercel
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - name: 📥 Fazer checkout do repositório
        uses: actions/checkout@v4

      - name: 🟢 Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Instalar dependências
        run: |
          echo "📦 Instalando dependências..."
          npm ci --prefer-offline --no-audit
          echo "✅ Dependências instaladas"
      - name: 🔧 Validar variáveis de ambiente
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          echo "🔧 Validando variáveis de ambiente..."
          
          if [ -z "$VERCEL_TOKEN" ]; then
            echo "❌ VERCEL_TOKEN não está configurado"
            exit 1
          fi
          
          if [ -z "$VERCEL_ORG_ID" ]; then
            echo "❌ VERCEL_ORG_ID não está configurado"
            exit 1
          fi
          
          if [ -z "$VERCEL_PROJECT_ID" ]; then
            echo "❌ VERCEL_PROJECT_ID não está configurado"
            exit 1
          fi
          
          echo "✅ Todas as variáveis de ambiente obrigatórias estão configuradas"
      - name: 🏗️ Build da aplicação
        env:
          GITHUB_USERNAME: ${{ vars.GITHUB_USERNAME || 'meuphilim' }}
          NEXT_PUBLIC_GITHUB_USERNAME: ${{ vars.GITHUB_USERNAME || 'meuphilim' }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "🏗️ Fazendo build da aplicação Next.js..."
          npm run build
          echo "✅ Build concluído com sucesso"
      - name: 📊 Análise do build
        run: |
          echo "📊 Análise do Build"
          echo "=================="
          if [ -d "out" ]; then
            echo "📁 Tamanho do diretório de saída: $(du -sh out/ | cut -f1)"
            echo "📄 Total de arquivos: $(find out -type f | wc -l)"
            echo "🗜️ Maiores arquivos:"
            find out -type f -exec ls -lh {} + | sort -k5 -hr | head -5
          else
            echo "❌ Diretório de saída não encontrado"
            exit 1
          fi
      - name: 🚀 Deploy para Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          echo "🚀 Fazendo deploy para Vercel..."
          
          # Instalar Vercel CLI
          npm install -g vercel@latest
          
          # Deploy para produção
          vercel deploy --prod --token="$VERCEL_TOKEN" --yes
          
          echo "✅ Deployment concluído com sucesso"
      - name: 📊 Resumo do deployment
        if: always()
        run: |
          echo "📊 Resumo do Deployment"
          echo "======================"
          echo "✅ Deployment Vercel concluído"
          echo "📅 Timestamp: $(date)"
          echo "🔗 Commit: ${{ github.sha }}"
          echo "🌿 Branch: ${{ github.ref }}"
          echo "🌐 URL de Produção: Verificar dashboard Vercel"
