name: 🔄 Integração Contínua

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-e-verificacao-tipos:
    name: 🔍 Lint e Verificação de Tipos
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Fazer checkout do repositório
        uses: actions/checkout@v4
        with:
          fetch_depth: 0

      - name: 🟢 Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Instalar dependências
        run: |
          npm ci --prefer-offline --no-audit
          echo "✅ Dependências instaladas com sucesso"

      - name: 🔍 Executar ESLint
        run: |
          echo "🔍 Executando ESLint..."
          npm run lint:check
          echo "✅ ESLint passou"

      - name: 🎨 Verificar formatação Prettier
        run: |
          echo "🎨 Verificando formatação Prettier..."
          npm run format:check
          echo "✅ Formatação Prettier está correta"

      - name: 🔧 Verificação de tipos
        run: |
          echo "🔧 Executando verificação de tipos TypeScript..."
          npm run type-check
          echo "✅ Verificação de tipos passou"

  build-e-teste:
    name: 🏗️ Build e Teste
    runs-on: ubuntu-latest
    needs: lint-e-verificacao-tipos
    
    steps:
      - name: 📥 Fazer checkout do repositório
        uses: actions/checkout@v4

      - name: 🟢 Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Instalar dependências
        run: npm ci --prefer-offline --no-audit

      - name: 🏗️ Build da aplicação Next.js
        env:
          GITHUB_USERNAME: ${{ vars.GITHUB_USERNAME || 'meuphilim' }}
          NEXT_PUBLIC_GITHUB_USERNAME: ${{ vars.GITHUB_USERNAME || 'meuphilim' }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "🏗️ Fazendo build da aplicação Next.js..."
          npm run build
          echo "✅ Build concluído com sucesso"

      - name: 📊 Análise do tamanho do build
        run: |
          echo "📊 Analisando tamanho do build..."
          du -sh out/ || echo "Diretório out não encontrado"
          find out -name "*.js" -exec wc -c {} + | sort -n | tail -10 || echo "Nenhum arquivo JS encontrado"

      - name: 🧪 Executar testes
        run: |
          echo "🧪 Executando testes..."
          npm test
          echo "✅ Testes concluídos"

  gerar-portfolio:
    name: 📝 Gerar Portfólio Estático
    runs-on: ubuntu-latest
    needs: build-e-teste
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: 📥 Fazer checkout do repositório
        uses: actions/checkout@v4

      - name: 🟢 Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Instalar dependências
        run: npm ci --prefer-offline --no-audit

      - name: 🚀 Gerar portfólio estático
        env:
          GITHUB_USERNAME: ${{ vars.GITHUB_USERNAME || 'meuphilim' }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_ACTIONS: true
        run: |
          echo "🚀 Gerando portfólio estático..."
          npm run gerar
          echo "✅ Portfólio gerado com sucesso"

      - name: 📁 Verificar arquivos gerados
        run: |
          echo "📁 Verificando arquivos gerados..."
          if [ -d "build" ]; then
            echo "✅ Diretório build existe"
            echo "📊 Conteúdo do diretório build:"
            ls -la build/
            if [ -f "build/index.html" ]; then
              echo "✅ index.html gerado com sucesso"
              echo "📏 Tamanho do arquivo: $(wc -c < build/index.html) bytes"
            else
              echo "❌ index.html não encontrado"
              exit 1
            fi
          else
            echo "❌ Diretório build não encontrado"
            exit 1
          fi

      - name: 🌐 Deploy para GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: success()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build
          force_orphan: true
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_message: '🚀 Deploy do portfólio - ${{ github.sha }}'

      - name: 📊 Resumo do deployment
        if: always()
        run: |
          echo "📊 Resumo do Deployment"
          echo "======================"
          echo "✅ Workflow concluído"
          echo "📅 Timestamp: $(date)"
          echo "🔗 Commit: ${{ github.sha }}"
          echo "🌿 Branch: ${{ github.ref }}"
          echo "🌐 URL do GitHub Pages: https://${{ github.repository_owner }}.github.io/Portifolio"
