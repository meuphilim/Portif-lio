name: 🔄 Continuous Integration

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-and-type-check:
    name: 🔍 Lint and Type Check
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: |
          npm ci --prefer-offline --no-audit
          echo "✅ Dependencies installed successfully"

      - name: 🔍 Run ESLint
        run: |
          echo "🔍 Running ESLint..."
          npm run lint:check
          echo "✅ ESLint passed"

      - name: 🎨 Check Prettier formatting
        run: |
          echo "🎨 Checking Prettier formatting..."
          npm run format:check
          echo "✅ Prettier formatting is correct"

      - name: 🔧 Type check
        run: |
          echo "🔧 Running TypeScript type check..."
          npm run type-check
          echo "✅ Type check passed"

  build-test:
    name: 🏗️ Build and Test
    runs-on: ubuntu-latest
    needs: lint-and-type-check
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: 🏗️ Build Next.js application
        env:
          GITHUB_USERNAME: ${{ vars.GITHUB_USERNAME || 'meuphilim' }}
          NEXT_PUBLIC_GITHUB_USERNAME: ${{ vars.GITHUB_USERNAME || 'meuphilim' }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "🏗️ Building Next.js application..."
          npm run build
          echo "✅ Build completed successfully"

      - name: 📊 Build size analysis
        run: |
          echo "📊 Analyzing build size..."
          du -sh out/ || echo "No out directory found"
          find out -name "*.js" -exec wc -c {} + | sort -n | tail -10 || echo "No JS files found"

      - name: 🧪 Run tests
        run: |
          echo "🧪 Running tests..."
          npm test
          echo "✅ Tests completed"

  generate-portfolio:
    name: 📝 Generate Static Portfolio
    runs-on: ubuntu-latest
    needs: build-test
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: 🚀 Generate static portfolio
        env:
          GITHUB_USERNAME: ${{ vars.GITHUB_USERNAME || 'meuphilim' }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_ACTIONS: true
        run: |
          echo "🚀 Generating static portfolio..."
          npm run generate
          echo "✅ Portfolio generated successfully"

      - name: 📁 Verify generated files
        run: |
          echo "📁 Verifying generated files..."
          if [ -d "build" ]; then
            echo "✅ Build directory exists"
            echo "📊 Build directory contents:"
            ls -la build/
            if [ -f "build/index.html" ]; then
              echo "✅ index.html generated successfully"
              echo "📏 File size: $(wc -c < build/index.html) bytes"
            else
              echo "❌ index.html not found"
              exit 1
            fi
          else
            echo "❌ Build directory not found"
            exit 1
          fi

      - name: 🌐 Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: success()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build
          force_orphan: true
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_message: '🚀 Deploy portfolio - ${{ github.sha }}'

      - name: 📊 Deployment summary
        if: always()
        run: |
          echo "📊 Deployment Summary"
          echo "===================="
          echo "✅ Workflow completed"
          echo "📅 Timestamp: $(date)"
          echo "🔗 Commit: ${{ github.sha }}"
          echo "🌿 Branch: ${{ github.ref }}"
          echo "🌐 GitHub Pages URL: https://${{ github.repository_owner }}.github.io/Portifolio"
